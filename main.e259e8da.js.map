{"version":3,"sources":["scripts/main.js"],"names":["tBody","document","querySelector","tHead","saveButton","formNameInpt","formPositionInpt","formOfficeInpt","formAgeInpt","formSalaryInpt","addNewEmployer","name","position","office","age","salary","newRow","insertRow","insertCell","textContent","pushNotification","title","description","type","body","div","createElement","style","cssText","innerHTML","classList","add","append","setTimeout","remove","addEventListener","event","item","target","querySelectorAll","forEach","row","tagName","parentElement","toggle","rows","heading","indexOfSortingCell","cellIndex","sort","a","b","aText","cells","bText","startsWith","slice","split","join","contains","isNaN","localeCompare","appendChild","preventDefault","value","replace","length","initialText","ev","firstElementChild","e","keyPressed","key","inputText"],"mappings":"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","file":"main.e259e8da.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tBody = document.querySelector('tbody');\nconst tHead = document.querySelector('thead');\nconst saveButton = document.querySelector('.save-to-table');\nconst formNameInpt = document.querySelector('#new-employer-name-input');\nconst formPositionInpt = document.querySelector('#new-employer-position-input');\nconst formOfficeInpt = document.querySelector('#new-employer-office-select');\nconst formAgeInpt = document.querySelector('#new-employer-age-input');\nconst formSalaryInpt = document.querySelector('#new-employer-salary-input');\n\n// Event Listener to make row active onclick\ntBody.addEventListener('click', (event) => {\n  const item = event.target;\n  const rows = tBody.querySelectorAll('tr');\n\n  rows.forEach(row => row.classList.remove('active'));\n\n  if (item.tagName !== 'TD') {\n    return;\n  }\n\n  item.parentElement.classList.toggle('active');\n});\n\n// Event Listener to sort table\ntHead.addEventListener('click', (event) => {\n  const rows = [...tBody.querySelectorAll('tr')];\n  const heading = event.target;\n  const indexOfSortingCell = heading.cellIndex;\n\n  rows.sort((a, b) => {\n    let aText = a.cells[indexOfSortingCell].textContent;\n    let bText = b.cells[indexOfSortingCell].textContent;\n\n    if (aText.startsWith('$')) {\n      aText = aText.slice(1).split(',').join('');\n      bText = bText.slice(1).split(',').join('');\n    }\n\n    if (!heading.classList.contains('asc-sorted')) {\n      if (isNaN(+aText)) {\n        return aText.localeCompare(bText);\n      }\n\n      return +aText - +bText;\n    }\n\n    if (isNaN(+aText)) {\n      return bText.localeCompare(aText);\n    }\n\n    return +bText - +aText;\n  });\n\n  heading.classList.toggle('asc-sorted');\n\n  rows.forEach(row => {\n    tBody.appendChild(row);\n  });\n});\n\n// Function of adding new employee to table\nfunction addNewEmployer(\n  name,\n  position,\n  office,\n  age,\n  salary\n) {\n  const newRow = tBody.insertRow();\n\n  const nameCol = newRow.insertCell(0);\n\n  nameCol.textContent = name;\n\n  const positionCol = newRow.insertCell(1);\n\n  positionCol.textContent = position;\n\n  const officeCol = newRow.insertCell(2);\n\n  officeCol.textContent = office;\n\n  const ageCol = newRow.insertCell(3);\n\n  ageCol.textContent = age;\n\n  const salaryCol = newRow.insertCell(4);\n\n  salaryCol.textContent = salary;\n};\n\n// Event listener of form-button to add new employee to table\nsaveButton.addEventListener('click', (event) => {\n  event.preventDefault();\n\n  const name = formNameInpt.value;\n  const position = formPositionInpt.value;\n  const office = formOfficeInpt.value;\n  const age = formAgeInpt.value;\n  let salary = formSalaryInpt.value;\n\n  salary = '$' + salary.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n  if (name.length < 4) {\n    pushNotification(\n      'Too short name',\n      'Your name should contain at least 4 letters',\n      'error');\n  } else if (!position.length) {\n    pushNotification(\n      'We would like to know your position',\n      'Fill position field',\n      'error');\n  } else if (+age < 18 || +age > 90) {\n    pushNotification(\n      'We have age requirements',\n      'Your age cannot be less then 18 and bigger then 90',\n      'error');\n  } else if (salary.length < 2) {\n    pushNotification(\n      'Note',\n      'Fill salary field',\n      'error');\n  } else {\n    addNewEmployer(name, position, office, age, salary);\n\n    pushNotification(\n      'Success',\n      'New Employee added',\n      'success');\n\n    formNameInpt.value = '';\n    formPositionInpt.value = '';\n    formAgeInpt.value = '';\n    formSalaryInpt.value = '';\n  }\n});\n\n// Function of pushing notifications\nfunction pushNotification(title, description, type) {\n  const body = document.querySelector('body');\n  const div = document.createElement('div');\n\n  div.style.cssText = `\n    top: 10px;\n    right: 10px;\n  `;\n\n  div.innerHTML = `\n  <h2>\n    ${title}\n  </h2>\n  <p>\n    ${description}\n  </p>\n  `;\n\n  div.classList.add('notification');\n  div.classList.add(`${type}`);\n\n  body.append(div);\n\n  setTimeout(() => div.remove(), 3000);\n};\n\n// Event listener to modify text of table cells on double click\ntBody.addEventListener('dblclick', (event) => {\n  const item = event.target;\n  const initialText = item.textContent;\n\n  if (item.tagName !== 'TD') {\n    return;\n  }\n\n  item.innerHTML = `\n    <input\n      name=\"change\"\n      class=\"cell-input\"\n      autocomplete=\"off\"\n    >\n  `;\n\n  tBody.addEventListener('click', (ev) => {\n    if (ev.target !== item.firstElementChild && ev.target !== item) {\n      item.innerHTML = initialText;\n    }\n  });\n\n  item.addEventListener('keypress', (e) => {\n    const keyPressed = e.key;\n    const inputText = item.firstElementChild.value;\n\n    if (keyPressed === 'Enter') {\n      inputText.length\n        ? item.innerHTML = inputText\n        : item.innerHTML = initialText;\n    }\n  });\n});\n"]}